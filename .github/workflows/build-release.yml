name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 触发条件：推送以 v 开头的标签，如 v1.0.0

permissions:
  contents: write  # 需要写权限来创建 release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'yarn'

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Download CPA executable
      run: yarn downloadCPA

    - name: Build Go backend
      run: yarn build:go

    - name: Build frontend
      run: yarn build:fe

    - name: Build Windows portable
      run: yarn build:win
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get tag name
      id: tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: RelayX-Portable-${{ steps.tag.outputs.TAG_NAME }}
        path: release/*.exe

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: RelayX ${{ steps.tag.outputs.TAG_NAME }}
        draft: false
        prerelease: false
        body: |
          ## RelayX ${{ steps.tag.outputs.TAG_NAME }}
          
          ### 下载
          - Windows Portable: RelayX-Portable-${{ steps.tag.outputs.TAG_NAME }}.exe
          
          ### 更新内容
          请查看提交历史了解详细更新内容。

    - name: Find and upload executable
      run: |
        $exePath = Get-ChildItem -Path "./release" -Name "*.exe" | Select-Object -First 1
        echo "EXE_PATH=./release/$exePath" >> $env:GITHUB_OUTPUT
      id: find_exe
      shell: pwsh

    - name: Upload Release Asset  
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.find_exe.outputs.EXE_PATH }}
        asset_name: RelayX-Portable-${{ steps.tag.outputs.TAG_NAME }}.exe
        asset_content_type: application/octet-stream